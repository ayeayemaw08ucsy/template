#server.port=8081

# Tell Spring Security (if used) to require requests over HTTPS
#security.require-ssl=true

# The format used for the keystore 
#server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
#server.ssl.key-store=classpath:keystore.p12
# The password used to generate the certificate
#server.ssl.key-store-password=bigbyte
# The alias mapped to the certificate
#server.ssl.key-alias=tomcat

#spring.datasource.url=jdbc:mysql://192.168.1.26:3306/fam_sit?autoReconnect=true&useSSL=false
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/fam_prod?autoReconnect=true&useSSL=false

spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.user.datasource.driver-class-name=com.mysql.jdbc.Driver

spring.jpa.properties.eclipselink.persistence-context.close-on-commit=true
spring.jpa.properties.eclipselink.persistence-context.flush-mode=commit
spring.jpa.properties.eclipselink.persistence-context.persist-on-commit=false

login.attempt = 3

spring.datasource.hikari.connectionTimeout=300000
spring.datasource.hikari.idleTimeout=600000
#spring.datasource.hikari.maxLifetime=1800000
spring.datasource.hikari.maximum-pool-size=12
spring.datasource.hikari.minimum-idle=1

spring.main.allow-bean-definition-overriding=true

spring.batch.initialize-schema=ALWAYS
spring.batch.job.enabled=false 

fa.fa.account1 = 100001-001
fa.fa.account2 = 900000-999

fa.ff.account1 = 100002-001
fa.ff.account2 = 900000-999

fa.disposal.account1 = 777777-001
fa.disposal.account2 = 888888-001

spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
dep.account1 = 777777-000
dep.account2 = 222222-000

dep.account3 = 777777-001
dep.account4 = 222222-001

report.file.dir = C:/fam-reports/
img.path = C:/images/